package main

import "github.com/ebitengine/oto/v3"

type SamConfig struct {
	Speed    byte
	Pitch    float64
	Mouth    byte
	Throat   byte
	SingMode bool
	Debug    bool
	Robot    bool
	Hifi     bool
}

type AudioState struct {
	OtoCtx            *oto.Context
	SampleRate        int
	NumChannels       int
	Buffer            []byte
	BufferPos         int
	OldTimeTableIndex int
}

type PhonemeState struct {
	PhonemeIndex        []byte // Initialized to 256 values in original implementation
	PhonemeLength       []byte // Initialized to 256 values in original implementation
	Stress              []byte // Initialized to 256 values in original implementation
	PhonemeIndexOutput  []byte // Initialized to 60 values in original implementation
	StressOutput        []byte // Initialized to 60 values in original implementation
	PhonemeLengthOutput []byte // Initialized to 60 values in original implementation
}

type SpeechFrame struct {
	Frequency1           []float64 // Initialized to 256 values in original implementation
	Frequency2           []float64 // Initialized to 256 values in original implementation
	Frequency3           []float64 // Initialized to 256 values in original implementation
	Amplitude1           []float64 // Initialized to 256 values in original implementation
	Amplitude2           []float64 // Initialized to 256 values in original implementation
	Amplitude3           []float64 // Initialized to 256 values in original implementation
	SampledConsonantFlag []byte    // Initialized to 256 values in original implementation
	Pitches              []float64 // Initialized to 256 values in original implementation
}

type InputState struct {
	Input     []byte
	InputTemp []byte // Initialized to 256 values in original implementation
}

type SamState struct {
	Config   SamConfig
	Audio    AudioState
	Phonemes PhonemeState
	Speech   SpeechFrame
	Input    InputState
	X        byte
}

const (
	SampleRate     = 22050
	SampleChannels = 1

	InternalSampleRate          = 1102500 // Almost the SID clock
	SampleRateConversionDivisor = float64(InternalSampleRate) / float64(SampleRate)
)

// Enumerated codes used in createTransitions(), interpolatePitch(), read(), write()
const (
	Pitches    = 168
	Frequency1 = 169
	Frequency2 = 170
	Frequency3 = 171
	Amplitude1 = 172
	Amplitude2 = 173
	Amplitude3 = 174
)

var timetable = [5][5]int{
	{162, 167, 167, 127, 128}, // Formant synth
	{226, 60, 60, 0, 0},       // Unvoiced sample 0
	{225, 60, 59, 0, 0},       // Unvoiced sample 1
	{200, 0, 0, 54, 55},       // Voiced sample 0
	{199, 0, 0, 54, 54},       // Voiced sample 1
}

var tab36376 = []byte{
	0, 0, 0, 0, 0, 0, 0, 0, // 0-7
	0, 0, 0, 0, 0, 0, 0, 0, // 8-15
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 130, // ' ', '!'
	0, 0, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 192,
	168, 176, 172, 192, 160, 184, // '@', 'A'
	160, 192, 188, 160, 172, 168, 172, 192, 160, 160, 172, 180, 164,
	192, 168, 168, 176, 192, 188, 0, 0, 0, 2, 0, // 'X', 'Y', 'Z', '[',
	32, 32, 155, 32, 192, 185, 32, 205, 163, 76, 138, 142,
}

var rules = []byte{
	']', 'A' | 0x80,
	' ', '(', 'A', '.', ')', '=', 'E', 'H', '4', 'Y', '.', ' ' | 0x80,
	'(', 'A', ')', ' ', '=', 'A', 'H' | 0x80,
	' ', '(', 'A', 'R', 'E', ')', ' ', '=', 'A', 'A', 'R' | 0x80,
	' ', '(', 'A', 'R', ')', 'O', '=', 'A', 'X', 'R' | 0x80,
	'(', 'A', 'R', ')', '#', '=', 'E', 'H', '4', 'R' | 0x80,
	' ', '^', '(', 'A', 'S', ')', '#', '=', 'E', 'Y', '4', 'S' | 0x80,
	'(', 'A', ')', 'W', 'A', '=', 'A', 'X' | 0x80,
	'(', 'A', 'W', ')', '=', 'A', 'O', '5' | 0x80,
	' ', ':', '(', 'A', 'N', 'Y', ')', '=', 'E', 'H', '4', 'N', 'I', 'Y' | 0x80,
	'(', 'A', ')', '^', '+', '#', '=', 'E', 'Y', '5' | 0x80,
	'#', ':', '(', 'A', 'L', 'L', 'Y', ')', '=', 'U', 'L', 'I', 'Y' | 0x80,
	' ', '(', 'A', 'L', ')', '#', '=', 'U', 'L' | 0x80,
	'(', 'A', 'G', 'A', 'I', 'N', ')', '=', 'A', 'X', 'G', 'E', 'H', '4', 'N' | 0x80,
	'#', ':', '(', 'A', 'G', ')', 'E', '=', 'I', 'H', 'J' | 0x80,
	'(', 'A', ')', '^', '%', '=', 'E', 'Y' | 0x80,
	'(', 'A', ')', '^', '+', ':', '#', '=', 'A', 'E' | 0x80,
	' ', ':', '(', 'A', ')', '^', '+', ' ', '=', 'E', 'Y', '4' | 0x80,
	' ', '(', 'A', 'R', 'R', ')', '=', 'A', 'X', 'R' | 0x80,
	'(', 'A', 'R', 'R', ')', '=', 'A', 'E', '4', 'R' | 0x80,
	' ', '^', '(', 'A', 'R', ')', ' ', '=', 'A', 'A', '5', 'R' | 0x80,
	'(', 'A', 'R', ')', '=', 'A', 'A', '5', 'R' | 0x80,
	'(', 'A', 'I', 'R', ')', '=', 'E', 'H', '4', 'R' | 0x80,
	'(', 'A', 'I', ')', '=', 'E', 'Y', '4' | 0x80,
	'(', 'A', 'Y', ')', '=', 'E', 'Y', '5' | 0x80,
	'(', 'A', 'U', ')', '=', 'A', 'O', '4' | 0x80,
	'#', ':', '(', 'A', 'L', ')', ' ', '=', 'U', 'L' | 0x80,
	'#', ':', '(', 'A', 'L', 'S', ')', ' ', '=', 'U', 'L', 'Z' | 0x80,
	'(', 'A', 'L', 'K', ')', '=', 'A', 'O', '4', 'K' | 0x80,
	'(', 'A', 'L', ')', '^', '=', 'A', 'O', 'L' | 0x80,
	' ', ':', '(', 'A', 'B', 'L', 'E', ')', '=', 'E', 'Y', '4', 'B', 'U', 'L' | 0x80,
	'(', 'A', 'B', 'L', 'E', ')', '=', 'A', 'X', 'B', 'U', 'L' | 0x80,
	'(', 'A', ')', 'V', 'O', '=', 'E', 'Y', '4' | 0x80,
	'(', 'A', 'N', 'G', ')', '+', '=', 'E', 'Y', '4', 'N', 'J' | 0x80,
	'(', 'A', 'T', 'A', 'R', 'I', ')', '=', 'A', 'H', 'T', 'A', 'A', '4', 'R', 'I', 'Y' | 0x80,
	'(', 'A', ')', 'T', 'O', 'M', '=', 'A', 'E' | 0x80,
	'(', 'A', ')', 'T', 'T', 'I', '=', 'A', 'E' | 0x80,
	' ', '(', 'A', 'T', ')', ' ', '=', 'A', 'E', 'T' | 0x80,
	' ', '(', 'A', ')', 'T', '=', 'A', 'H' | 0x80,
	'(', 'A', ')', '=', 'A', 'E' | 0x80,

	']', 'B' | 0x80,
	' ', '(', 'B', ')', ' ', '=', 'B', 'I', 'Y', '4' | 0x80,
	' ', '(', 'B', 'E', ')', '^', '#', '=', 'B', 'I', 'H' | 0x80,
	'(', 'B', 'E', 'I', 'N', 'G', ')', '=', 'B', 'I', 'Y', '4', 'I', 'H', 'N', 'X' | 0x80,
	' ', '(', 'B', 'O', 'T', 'H', ')', ' ', '=', 'B', 'O', 'W', '4', 'T', 'H' | 0x80,
	' ', '(', 'B', 'U', 'S', ')', '#', '=', 'B', 'I', 'H', '4', 'Z' | 0x80,
	'(', 'B', 'R', 'E', 'A', 'K', ')', '=', 'B', 'R', 'E', 'Y', '5', 'K' | 0x80,
	'(', 'B', 'U', 'I', 'L', ')', '=', 'B', 'I', 'H', '4', 'L' | 0x80,
	'(', 'B', ')', '=', 'B' | 0x80,

	']', 'C' | 0x80,
	' ', '(', 'C', ')', ' ', '=', 'S', 'I', 'Y', '4' | 0x80,
	' ', '(', 'C', 'H', ')', '^', '=', 'K' | 0x80,
	'^', 'E', '(', 'C', 'H', ')', '=', 'K' | 0x80,
	'(', 'C', 'H', 'A', ')', 'R', '#', '=', 'K', 'E', 'H', '5' | 0x80,
	'(', 'C', 'H', ')', '=', 'C', 'H' | 0x80,
	' ', 'S', '(', 'C', 'I', ')', '#', '=', 'S', 'A', 'Y', '4' | 0x80,
	'(', 'C', 'I', ')', 'A', '=', 'S', 'H' | 0x80,
	'(', 'C', 'I', ')', 'O', '=', 'S', 'H' | 0x80,
	'(', 'C', 'I', ')', 'E', 'N', '=', 'S', 'H' | 0x80,
	'(', 'C', 'I', 'T', 'Y', ')', '=', 'S', 'I', 'H', 'T', 'I', 'Y' | 0x80,
	'(', 'C', ')', '+', '=', 'S' | 0x80,
	'(', 'C', 'K', ')', '=', 'K' | 0x80,
	'(', 'C', 'O', 'M', 'M', 'O', 'D', 'O', 'R', 'E', ')', '=', 'K', 'A', 'A', '4', 'M', 'A', 'H', 'D', 'O', 'H', 'R' | 0x80,
	'(', 'C', 'O', 'M', ')', '=', 'K', 'A', 'H', 'M' | 0x80,
	'(', 'C', 'U', 'I', 'T', ')', '=', 'K', 'I', 'H', 'T' | 0x80,
	'(', 'C', 'R', 'E', 'A', ')', '=', 'K', 'R', 'I', 'Y', 'E', 'Y' | 0x80,
	'(', 'C', ')', '=', 'K' | 0x80,

	']', 'D' | 0x80,
	' ', '(', 'D', ')', ' ', '=', 'D', 'I', 'Y', '4' | 0x80,
	' ', '(', 'D', 'R', '.', ')', ' ', '=', 'D', 'A', 'A', '4', 'K', 'T', 'E', 'R' | 0x80,
	'#', ':', '(', 'D', 'E', 'D', ')', ' ', '=', 'D', 'I', 'H', 'D' | 0x80,
	'.', 'E', '(', 'D', ')', ' ', '=', 'D' | 0x80,
	'#', ':', '^', 'E', '(', 'D', ')', ' ', '=', 'T' | 0x80,
	' ', '(', 'D', 'E', ')', '^', '#', '=', 'D', 'I', 'H' | 0x80,
	' ', '(', 'D', 'O', ')', ' ', '=', 'D', 'U', 'W' | 0x80,
	' ', '(', 'D', 'O', 'E', 'S', ')', '=', 'D', 'A', 'H', 'Z' | 0x80,
	'(', 'D', 'O', 'N', 'E', ')', ' ', '=', 'D', 'A', 'H', '5', 'N' | 0x80,
	'(', 'D', 'O', 'I', 'N', 'G', ')', '=', 'D', 'U', 'W', '4', 'I', 'H', 'N', 'X' | 0x80,
	' ', '(', 'D', 'O', 'W', ')', '=', 'D', 'A', 'W' | 0x80,
	'#', '(', 'D', 'U', ')', 'A', '=', 'J', 'U', 'W' | 0x80,
	'#', '(', 'D', 'U', ')', '^', '#', '=', 'J', 'A', 'X' | 0x80,
	'(', 'D', ')', '=', 'D' | 0x80,

	']', 'E' | 0x80,
	' ', '(', 'E', ')', ' ', '=', 'I', 'Y', 'I', 'Y', '4' | 0x80,
	'#', ':', '(', 'E', ')', ' ', '=' | 0x80,
	'\'', ':', '^', '(', 'E', ')', ' ', '=' | 0x80,
	' ', ':', '(', 'E', ')', ' ', '=', 'I', 'Y' | 0x80,
	'#', '(', 'E', 'D', ')', ' ', '=', 'D' | 0x80,
	'#', ':', '(', 'E', ')', 'D', ' ', '=' | 0x80,
	'(', 'E', 'V', ')', 'E', 'R', '=', 'E', 'H', '4', 'V' | 0x80,
	'(', 'E', ')', '^', '%', '=', 'I', 'Y', '4' | 0x80,
	'(', 'E', 'R', 'I', ')', '#', '=', 'I', 'Y', '4', 'R', 'I', 'Y' | 0x80,
	'(', 'E', 'R', 'I', ')', '=', 'E', 'H', '4', 'R', 'I', 'H' | 0x80,
	'#', ':', '(', 'E', 'R', ')', '#', '=', 'E', 'R' | 0x80,
	'(', 'E', 'R', 'R', 'O', 'R', ')', '=', 'E', 'H', '4', 'R', 'O', 'H', 'R' | 0x80,
	'(', 'E', 'R', 'A', 'S', 'E', ')', '=', 'I', 'H', 'R', 'E', 'Y', '5', 'S' | 0x80,
	'(', 'E', 'R', ')', '#', '=', 'E', 'H', 'R' | 0x80,
	'(', 'E', 'R', ')', '=', 'E', 'R' | 0x80,
	' ', '(', 'E', 'V', 'E', 'N', ')', '=', 'I', 'Y', 'V', 'E', 'H', 'N' | 0x80,
	'#', ':', '(', 'E', ')', 'W', '=' | 0x80,
	'@', '(', 'E', 'W', ')', '=', 'U', 'W' | 0x80,
	'(', 'E', 'W', ')', '=', 'Y', 'U', 'W' | 0x80,
	'(', 'E', ')', 'O', '=', 'I', 'Y' | 0x80,
	'#', ':', '&', '(', 'E', 'S', ')', ' ', '=', 'I', 'H', 'Z' | 0x80,
	'#', ':', '(', 'E', ')', 'S', ' ', '=' | 0x80,
	'#', ':', '(', 'E', 'L', 'Y', ')', ' ', '=', 'L', 'I', 'Y' | 0x80,
	'#', ':', '(', 'E', 'M', 'E', 'N', 'T', ')', '=', 'M', 'E', 'H', 'N', 'T' | 0x80,
	'(', 'E', 'F', 'U', 'L', ')', '=', 'F', 'U', 'H', 'L' | 0x80,
	'(', 'E', 'E', ')', '=', 'I', 'Y', '4' | 0x80,
	'(', 'E', 'A', 'R', 'N', ')', '=', 'E', 'R', '5', 'N' | 0x80,
	' ', '(', 'E', 'A', 'R', ')', '^', '=', 'E', 'R', '5' | 0x80,
	'(', 'E', 'A', 'D', ')', '=', 'E', 'H', 'D' | 0x80,
	'#', ':', '(', 'E', 'A', ')', ' ', '=', 'I', 'Y', 'A', 'X' | 0x80,
	'(', 'E', 'A', ')', 'S', 'U', '=', 'E', 'H', '5' | 0x80,
	'(', 'E', 'A', ')', '=', 'I', 'Y', '5' | 0x80,
	'(', 'E', 'I', 'G', 'H', ')', '=', 'E', 'Y', '4' | 0x80,
	'(', 'E', 'I', ')', '=', 'I', 'Y', '4' | 0x80,
	' ', '(', 'E', 'Y', 'E', ')', '=', 'A', 'Y', '4' | 0x80,
	'(', 'E', 'Y', ')', '=', 'I', 'Y' | 0x80,
	'(', 'E', 'U', ')', '=', 'Y', 'U', 'W', '5' | 0x80,
	'(', 'E', 'Q', 'U', 'A', 'L', ')', '=', 'I', 'Y', '4', 'K', 'W', 'U', 'L' | 0x80,
	'(', 'E', ')', '=', 'E', 'H' | 0x80,

	']', 'F' | 0x80,
	' ', '(', 'F', ')', ' ', '=', 'E', 'H', '4', 'F' | 0x80,
	'(', 'F', 'U', 'L', ')', '=', 'F', 'U', 'H', 'L' | 0x80,
	'(', 'F', 'R', 'I', 'E', 'N', 'D', ')', '=', 'F', 'R', 'E', 'H', '5', 'N', 'D' | 0x80,
	'(', 'F', 'A', 'T', 'H', 'E', 'R', ')', '=', 'F', 'A', 'A', '4', 'D', 'H', 'E', 'R' | 0x80,
	'(', 'F', ')', 'F', '=' | 0x80,
	'(', 'F', ')', '=', 'F' | 0x80,

	']', 'G' | 0x80,
	' ', '(', 'G', ')', ' ', '=', 'J', 'I', 'Y', '4' | 0x80,
	'(', 'G', 'I', 'V', ')', '=', 'G', 'I', 'H', '5', 'V' | 0x80,
	' ', '(', 'G', ')', 'I', '^', '=', 'G' | 0x80,
	'(', 'G', 'E', ')', 'T', '=', 'G', 'E', 'H', '5' | 0x80,
	'S', 'U', '(', 'G', 'G', 'E', 'S', ')', '=', 'G', 'J', 'E', 'H', '4', 'S' | 0x80,
	'(', 'G', 'G', ')', '=', 'G' | 0x80,
	' ', 'B', '#', '(', 'G', ')', '=', 'G' | 0x80,
	'(', 'G', ')', '+', '=', 'J' | 0x80,
	'(', 'G', 'R', 'E', 'A', 'T', ')', '=', 'G', 'R', 'E', 'Y', '4', 'T' | 0x80,
	'(', 'G', 'O', 'N', ')', 'E', '=', 'G', 'A', 'O', '5', 'N' | 0x80,
	'#', '(', 'G', 'H', ')', '=' | 0x80,
	' ', '(', 'G', 'N', ')', '=', 'N' | 0x80,
	'(', 'G', ')', '=', 'G' | 0x80,

	']', 'H' | 0x80,
	' ', '(', 'H', ')', ' ', '=', 'E', 'Y', '4', 'C', 'H' | 0x80,
	' ', '(', 'H', 'A', 'V', ')', '=', '/', 'H', 'A', 'E', '6', 'V' | 0x80,
	' ', '(', 'H', 'E', 'R', 'E', ')', '=', '/', 'H', 'I', 'Y', 'R' | 0x80,
	' ', '(', 'H', 'O', 'U', 'R', ')', '=', 'A', 'W', '5', 'E', 'R' | 0x80,
	'(', 'H', 'O', 'W', ')', '=', '/', 'H', 'A', 'W' | 0x80,
	'(', 'H', ')', '#', '=', '/', 'H' | 0x80,
	'(', 'H', ')', '=' | 0x80,

	']', 'I' | 0x80,
	' ', '(', 'I', 'N', ')', '=', 'I', 'H', 'N' | 0x80,
	' ', '(', 'I', ')', ' ', '=', 'A', 'Y', '4' | 0x80,
	'(', 'I', ')', ' ', '=', 'A', 'Y' | 0x80,
	'(', 'I', 'N', ')', 'D', '=', 'A', 'Y', '5', 'N' | 0x80,
	'S', 'E', 'M', '(', 'I', ')', '=', 'I', 'Y' | 0x80,
	' ', 'A', 'N', 'T', '(', 'I', ')', '=', 'A', 'Y' | 0x80,
	'(', 'I', 'E', 'R', ')', '=', 'I', 'Y', 'E', 'R' | 0x80,
	'#', ':', 'R', '(', 'I', 'E', 'D', ')', ' ', '=', 'I', 'Y', 'D' | 0x80,
	'(', 'I', 'E', 'D', ')', ' ', '=', 'A', 'Y', '5', 'D' | 0x80,
	'(', 'I', 'E', 'N', ')', '=', 'I', 'Y', 'E', 'H', 'N' | 0x80,
	'(', 'I', 'E', ')', 'T', '=', 'A', 'Y', '4', 'E', 'H' | 0x80,
	'(', 'I', '\'', ')', '=', 'A', 'Y', '5' | 0x80,
	' ', ':', '(', 'I', ')', '^', '%', '=', 'A', 'Y', '5' | 0x80,
	' ', ':', '(', 'I', 'E', ')', ' ', '=', 'A', 'Y', '4' | 0x80,
	'(', 'I', ')', '%', '=', 'I', 'Y' | 0x80,
	'(', 'I', 'E', ')', '=', 'I', 'Y', '4' | 0x80,
	' ', '(', 'I', 'D', 'E', 'A', ')', '=', 'A', 'Y', 'D', 'I', 'Y', '5', 'A', 'H' | 0x80,
	'(', 'I', ')', '^', '+', ':', '#', '=', 'I', 'H' | 0x80,
	'(', 'I', 'R', ')', '#', '=', 'A', 'Y', 'R' | 0x80,
	'(', 'I', 'Z', ')', '%', '=', 'A', 'Y', 'Z' | 0x80,
	'(', 'I', 'S', ')', '%', '=', 'A', 'Y', 'Z' | 0x80,
	'I', '^', '(', 'I', ')', '^', '#', '=', 'I', 'H' | 0x80,
	'+', '^', '(', 'I', ')', '^', '+', '=', 'A', 'Y' | 0x80,
	'#', ':', '^', '(', 'I', ')', '^', '+', '=', 'I', 'H' | 0x80,
	'(', 'I', ')', '^', '+', '=', 'A', 'Y' | 0x80,
	'(', 'I', 'R', ')', '=', 'E', 'R' | 0x80,
	'(', 'I', 'G', 'H', ')', '=', 'A', 'Y', '4' | 0x80,
	'(', 'I', 'L', 'D', ')', '=', 'A', 'Y', '5', 'L', 'D' | 0x80,
	' ', '(', 'I', 'G', 'N', ')', '=', 'I', 'H', 'G', 'N' | 0x80,
	'(', 'I', 'G', 'N', ')', ' ', '=', 'A', 'Y', '4', 'N' | 0x80,
	'(', 'I', 'G', 'N', ')', '^', '=', 'A', 'Y', '4', 'N' | 0x80,
	'(', 'I', 'G', 'N', ')', '%', '=', 'A', 'Y', '4', 'N' | 0x80,
	'(', 'I', 'C', 'R', 'O', ')', '=', 'A', 'Y', '4', 'K', 'R', 'O', 'H' | 0x80,
	'(', 'I', 'Q', 'U', 'E', ')', '=', 'I', 'Y', '4', 'K' | 0x80,
	'(', 'I', ')', '=', 'I', 'H' | 0x80,

	']', 'J' | 0x80,
	' ', '(', 'J', ')', ' ', '=', 'J', 'E', 'Y', '4' | 0x80,
	'(', 'J', ')', '=', 'J' | 0x80,

	']', 'K' | 0x80,
	' ', '(', 'K', ')', ' ', '=', 'K', 'E', 'Y', '4' | 0x80,
	' ', '(', 'K', ')', 'N', '=' | 0x80,
	'(', 'K', ')', '=', 'K' | 0x80,

	']', 'L' | 0x80,
	' ', '(', 'L', ')', ' ', '=', 'E', 'H', '4', 'L' | 0x80,
	'(', 'L', 'O', ')', 'C', '#', '=', 'L', 'O', 'W' | 0x80,
	'L', '(', 'L', ')', '=' | 0x80,
	'#', ':', '^', '(', 'L', ')', '%', '=', 'U', 'L' | 0x80,
	'(', 'L', 'E', 'A', 'D', ')', '=', 'L', 'I', 'Y', 'D' | 0x80,
	' ', '(', 'L', 'A', 'U', 'G', 'H', ')', '=', 'L', 'A', 'E', '4', 'F' | 0x80,
	'(', 'L', ')', '=', 'L' | 0x80,

	']', 'M' | 0x80,
	' ', '(', 'M', ')', ' ', '=', 'E', 'H', '4', 'M' | 0x80,
	' ', '(', 'M', 'R', '.', ')', ' ', '=', 'M', 'I', 'H', '4', 'S', 'T', 'E', 'R' | 0x80,
	' ', '(', 'M', 'S', '.', ')', '=', 'M', 'I', 'H', '5', 'Z' | 0x80,
	' ', '(', 'M', 'R', 'S', '.', ')', ' ', '=', 'M', 'I', 'H', '4', 'S', 'I', 'X', 'Z' | 0x80,
	'(', 'M', 'O', 'V', ')', '=', 'M', 'U', 'W', '4', 'V' | 0x80,
	'(', 'M', 'A', 'C', 'H', 'I', 'N', ')', '=', 'M', 'A', 'H', 'S', 'H', 'I', 'Y', '5', 'N' | 0x80,
	'M', '(', 'M', ')', '=' | 0x80,
	'(', 'M', ')', '=', 'M' | 0x80,

	']', 'N' | 0x80,
	' ', '(', 'N', ')', ' ', '=', 'E', 'H', '4', 'N' | 0x80,
	'E', '(', 'N', 'G', ')', '+', '=', 'N', 'J' | 0x80,
	'(', 'N', 'G', ')', 'R', '=', 'N', 'X', 'G' | 0x80,
	'(', 'N', 'G', ')', '#', '=', 'N', 'X', 'G' | 0x80,
	'(', 'N', 'G', 'L', ')', '%', '=', 'N', 'X', 'G', 'U', 'L' | 0x80,
	'(', 'N', 'G', ')', '=', 'N', 'X' | 0x80,
	'(', 'N', 'K', ')', '=', 'N', 'X', 'K' | 0x80,
	' ', '(', 'N', 'O', 'W', ')', ' ', '=', 'N', 'A', 'W', '4' | 0x80,
	'N', '(', 'N', ')', '=' | 0x80,
	'(', 'N', 'O', 'N', ')', 'E', '=', 'N', 'A', 'H', '4', 'N' | 0x80,
	'(', 'N', ')', '=', 'N' | 0x80,

	']', 'O' | 0x80,
	' ', '(', 'O', ')', ' ', '=', 'O', 'H', '4', 'W' | 0x80,
	'(', 'O', 'F', ')', ' ', '=', 'A', 'H', 'V' | 0x80,
	' ', '(', 'O', 'H', ')', ' ', '=', 'O', 'W', '5' | 0x80,
	'(', 'O', 'R', 'O', 'U', 'G', 'H', ')', '=', 'E', 'R', '4', 'O', 'W' | 0x80,
	'#', ':', '(', 'O', 'R', ')', ' ', '=', 'E', 'R' | 0x80,
	'#', ':', '(', 'O', 'R', 'S', ')', ' ', '=', 'E', 'R', 'Z' | 0x80,
	'(', 'O', 'R', ')', '=', 'A', 'O', 'R' | 0x80,
	' ', '(', 'O', 'N', 'E', ')', '=', 'W', 'A', 'H', 'N' | 0x80,
	'#', '(', 'O', 'N', 'E', ')', ' ', '=', 'W', 'A', 'H', 'N' | 0x80,
	'(', 'O', 'W', ')', '=', 'O', 'W' | 0x80,
	' ', '(', 'O', 'V', 'E', 'R', ')', '=', 'O', 'W', '5', 'V', 'E', 'R' | 0x80,
	'P', 'R', '(', 'O', ')', 'V', '=', 'U', 'W', '4' | 0x80,
	'(', 'O', 'V', ')', '=', 'A', 'H', '4', 'V' | 0x80,
	'(', 'O', ')', '^', '%', '=', 'O', 'W', '5' | 0x80,
	'(', 'O', ')', '^', 'E', 'N', '=', 'O', 'W' | 0x80,
	'(', 'O', ')', '^', 'I', '#', '=', 'O', 'W', '5' | 0x80,
	'(', 'O', 'L', ')', 'D', '=', 'O', 'W', '4', 'L' | 0x80,
	'(', 'O', 'U', 'G', 'H', 'T', ')', '=', 'A', 'O', '5', 'T' | 0x80,
	'(', 'O', 'U', 'G', 'H', ')', '=', 'A', 'H', '5', 'F' | 0x80,
	' ', '(', 'O', 'U', ')', '=', 'A', 'W' | 0x80,
	'H', '(', 'O', 'U', ')', 'S', '#', '=', 'A', 'W', '4' | 0x80,
	'(', 'O', 'U', 'S', ')', '=', 'A', 'X', 'S' | 0x80,
	'(', 'O', 'U', 'R', ')', '=', 'O', 'H', 'R' | 0x80,
	'(', 'O', 'U', 'L', 'D', ')', '=', 'U', 'H', '5', 'D' | 0x80,
	'(', 'O', 'U', ')', '^', 'L', '=', 'A', 'H', '5' | 0x80,
	'(', 'O', 'U', 'P', ')', '=', 'U', 'W', '5', 'P' | 0x80,
	'(', 'O', 'U', ')', '=', 'A', 'W' | 0x80,
	'(', 'O', 'Y', ')', '=', 'O', 'Y' | 0x80,
	'(', 'O', 'I', 'N', 'G', ')', '=', 'O', 'W', '4', 'I', 'H', 'N', 'X' | 0x80,
	'(', 'O', 'I', ')', '=', 'O', 'Y', '5' | 0x80,
	'(', 'O', 'O', 'R', ')', '=', 'O', 'H', '5', 'R' | 0x80,
	'(', 'O', 'O', 'K', ')', '=', 'U', 'H', '5', 'K' | 0x80,
	'F', '(', 'O', 'O', 'D', ')', '=', 'U', 'W', '5', 'D' | 0x80,
	'L', '(', 'O', 'O', 'D', ')', '=', 'A', 'H', '5', 'D' | 0x80,
	'M', '(', 'O', 'O', 'D', ')', '=', 'U', 'W', '5', 'D' | 0x80,
	'(', 'O', 'O', 'D', ')', '=', 'U', 'H', '5', 'D' | 0x80,
	'F', '(', 'O', 'O', 'T', ')', '=', 'U', 'H', '5', 'T' | 0x80,
	'(', 'O', 'O', ')', '=', 'U', 'W', '5' | 0x80,
	'(', 'O', '\'', ')', '=', 'O', 'H' | 0x80,
	'(', 'O', ')', 'E', '=', 'O', 'W' | 0x80,
	'(', 'O', ')', ' ', '=', 'O', 'W' | 0x80,
	'(', 'O', 'A', ')', '=', 'O', 'W', '4' | 0x80,
	' ', '(', 'O', 'N', 'L', 'Y', ')', '=', 'O', 'W', '4', 'N', 'L', 'I', 'Y' | 0x80,
	' ', '(', 'O', 'N', 'C', 'E', ')', '=', 'W', 'A', 'H', '4', 'N', 'S' | 0x80,
	'(', 'O', 'N', '\'', 'T', ')', '=', 'O', 'W', '4', 'N', 'T' | 0x80,
	'C', '(', 'O', ')', 'N', '=', 'A', 'A' | 0x80,
	'(', 'O', ')', 'N', 'G', '=', 'A', 'O' | 0x80,
	' ', ':', '^', '(', 'O', ')', 'N', '=', 'A', 'H' | 0x80,
	'I', '(', 'O', 'N', ')', '=', 'U', 'N' | 0x80,
	'#', ':', '(', 'O', 'N', ')', '=', 'U', 'N' | 0x80,
	'#', '^', '(', 'O', 'N', ')', '=', 'U', 'N' | 0x80,
	'(', 'O', ')', 'S', 'T', '=', 'O', 'W' | 0x80,
	'(', 'O', 'F', ')', '^', '=', 'A', 'O', '4', 'F' | 0x80,
	'(', 'O', 'T', 'H', 'E', 'R', ')', '=', 'A', 'H', '5', 'D', 'H', 'E', 'R' | 0x80,
	'R', '(', 'O', ')', 'B', '=', 'R', 'A', 'A' | 0x80,
	'^', 'R', '(', 'O', ')', ':', '#', '=', 'O', 'W', '5' | 0x80,
	'(', 'O', 'S', 'S', ')', ' ', '=', 'A', 'O', '5', 'S' | 0x80,
	'#', ':', '^', '(', 'O', 'M', ')', '=', 'A', 'H', 'M' | 0x80,
	'(', 'O', ')', '=', 'A', 'A' | 0x80,

	']', 'P' | 0x80,
	' ', '(', 'P', ')', ' ', '=', 'P', 'I', 'Y', '4' | 0x80,
	'(', 'P', 'H', ')', '=', 'F' | 0x80,
	'(', 'P', 'E', 'O', 'P', 'L', ')', '=', 'P', 'I', 'Y', '5', 'P', 'U', 'L' | 0x80,
	'(', 'P', 'O', 'W', ')', '=', 'P', 'A', 'W', '4' | 0x80,
	'(', 'P', 'U', 'T', ')', ' ', '=', 'P', 'U', 'H', 'T' | 0x80,
	'(', 'P', ')', 'P', '=' | 0x80,
	'(', 'P', ')', 'S', '=' | 0x80,
	'(', 'P', ')', 'N', '=' | 0x80,
	'(', 'P', 'R', 'O', 'F', '.', ')', '=', 'P', 'R', 'O', 'H', 'F', 'E', 'H', '4', 'S', 'E', 'R' | 0x80,
	'(', 'P', ')', '=', 'P' | 0x80,

	']', 'Q' | 0x80,
	' ', '(', 'Q', ')', ' ', '=', 'K', 'Y', 'U', 'W', '4' | 0x80,
	'(', 'Q', 'U', 'A', 'R', ')', '=', 'K', 'W', 'O', 'H', '5', 'R' | 0x80,
	'(', 'Q', 'U', ')', '=', 'K', 'W' | 0x80,
	'(', 'Q', ')', '=', 'K' | 0x80,

	']', 'R' | 0x80,
	' ', '(', 'R', ')', ' ', '=', 'A', 'A', '5', 'R' | 0x80,
	' ', '(', 'R', 'E', ')', '^', '#', '=', 'R', 'I', 'Y' | 0x80,
	'(', 'R', ')', 'R', '=' | 0x80,
	'(', 'R', ')', '=', 'R' | 0x80,

	']', 'S' | 0x80,
	' ', '(', 'S', ')', ' ', '=', 'E', 'H', '4', 'S' | 0x80,
	'(', 'S', 'H', ')', '=', 'S', 'H' | 0x80,
	'#', '(', 'S', 'I', 'O', 'N', ')', '=', 'Z', 'H', 'U', 'N' | 0x80,
	'(', 'S', 'O', 'M', 'E', ')', '=', 'S', 'A', 'H', 'M' | 0x80,
	'#', '(', 'S', 'U', 'R', ')', '#', '=', 'Z', 'H', 'E', 'R' | 0x80,
	'(', 'S', 'U', 'R', ')', '#', '=', 'S', 'H', 'E', 'R' | 0x80,
	'#', '(', 'S', 'U', ')', '#', '=', 'Z', 'H', 'U', 'W' | 0x80,
	'#', '(', 'S', 'S', 'U', ')', '#', '=', 'S', 'H', 'U', 'W' | 0x80,
	'#', '(', 'S', 'E', 'D', ')', '=', 'Z', 'D' | 0x80,
	'#', '(', 'S', ')', '#', '=', 'Z' | 0x80,
	'(', 'S', 'A', 'I', 'D', ')', '=', 'S', 'E', 'H', 'D' | 0x80,
	'^', '(', 'S', 'I', 'O', 'N', ')', '=', 'S', 'H', 'U', 'N' | 0x80,
	'(', 'S', ')', 'S', '=' | 0x80,
	'.', '(', 'S', ')', ' ', '=', 'Z' | 0x80,
	'#', ':', '.', 'E', '(', 'S', ')', ' ', '=', 'Z' | 0x80,
	'#', ':', '^', '#', '(', 'S', ')', ' ', '=', 'S' | 0x80,
	'U', '(', 'S', ')', ' ', '=', 'S' | 0x80,
	' ', ':', '#', '(', 'S', ')', ' ', '=', 'Z' | 0x80,
	'#', '#', '(', 'S', ')', ' ', '=', 'Z' | 0x80,
	' ', '(', 'S', 'C', 'H', ')', '=', 'S', 'K' | 0x80,
	'(', 'S', ')', 'C', '+', '=' | 0x80,
	'#', '(', 'S', 'M', ')', '=', 'Z', 'U', 'M' | 0x80,
	'#', '(', 'S', 'N', ')', '\'', '=', 'Z', 'U', 'M' | 0x80,
	'(', 'S', 'T', 'L', 'E', ')', '=', 'S', 'U', 'L' | 0x80,
	'(', 'S', ')', '=', 'S' | 0x80,

	']', 'T' | 0x80,
	' ', '(', 'T', ')', ' ', '=', 'T', 'I', 'Y', '4' | 0x80,
	' ', '(', 'T', 'H', 'E', ')', ' ', '#', '=', 'D', 'H', 'I', 'Y' | 0x80,
	' ', '(', 'T', 'H', 'E', ')', ' ', '=', 'D', 'H', 'A', 'X' | 0x80,
	'(', 'T', 'O', ')', ' ', '=', 'T', 'U', 'X' | 0x80,
	' ', '(', 'T', 'H', 'A', 'T', ')', '=', 'D', 'H', 'A', 'E', 'T' | 0x80,
	' ', '(', 'T', 'H', 'I', 'S', ')', ' ', '=', 'D', 'H', 'I', 'H', 'S' | 0x80,
	' ', '(', 'T', 'H', 'E', 'Y', ')', '=', 'D', 'H', 'E', 'Y' | 0x80,
	' ', '(', 'T', 'H', 'E', 'R', 'E', ')', '=', 'D', 'H', 'E', 'H', 'R' | 0x80,
	'(', 'T', 'H', 'E', 'R', ')', '=', 'D', 'H', 'E', 'R' | 0x80,
	'(', 'T', 'H', 'E', 'I', 'R', ')', '=', 'D', 'H', 'E', 'H', 'R' | 0x80,
	' ', '(', 'T', 'H', 'A', 'N', ')', ' ', '=', 'D', 'H', 'A', 'E', 'N' | 0x80,
	' ', '(', 'T', 'H', 'E', 'M', ')', ' ', '=', 'D', 'H', 'A', 'E', 'N' | 0x80,
	'(', 'T', 'H', 'E', 'S', 'E', ')', ' ', '=', 'D', 'H', 'I', 'Y', 'Z' | 0x80,
	' ', '(', 'T', 'H', 'E', 'N', ')', '=', 'D', 'H', 'E', 'H', 'N' | 0x80,
	'(', 'T', 'H', 'R', 'O', 'U', 'G', 'H', ')', '=', 'T', 'H', 'R', 'U', 'W', '4' | 0x80,
	'(', 'T', 'H', 'O', 'S', 'E', ')', '=', 'D', 'H', 'O', 'H', 'Z' | 0x80,
	'(', 'T', 'H', 'O', 'U', 'G', 'H', ')', ' ', '=', 'D', 'H', 'O', 'W' | 0x80,
	'(', 'T', 'O', 'D', 'A', 'Y', ')', '=', 'T', 'U', 'X', 'D', 'E', 'Y' | 0x80,
	'(', 'T', 'O', 'M', 'O', ')', 'R', 'R', 'O', 'W', '=', 'T', 'U', 'M', 'A', 'A', '5' | 0x80,
	'(', 'T', 'O', ')', 'T', 'A', 'L', '=', 'T', 'O', 'W', '5' | 0x80,
	' ', '(', 'T', 'H', 'U', 'S', ')', '=', 'D', 'H', 'A', 'H', '4', 'S' | 0x80,
	'(', 'T', 'H', ')', '=', 'T', 'H' | 0x80,
	'#', ':', '(', 'T', 'E', 'D', ')', '=', 'T', 'I', 'X', 'D' | 0x80,
	'S', '(', 'T', 'I', ')', '#', 'N', '=', 'C', 'H' | 0x80,
	'(', 'T', 'I', ')', 'O', '=', 'S', 'H' | 0x80,
	'(', 'T', 'I', ')', 'A', '=', 'S', 'H' | 0x80,
	'(', 'T', 'I', 'E', 'N', ')', '=', 'S', 'H', 'U', 'N' | 0x80,
	'(', 'T', 'U', 'R', ')', '#', '=', 'C', 'H', 'E', 'R' | 0x80,
	'(', 'T', 'U', ')', 'A', '=', 'C', 'H', 'U', 'W' | 0x80,
	' ', '(', 'T', 'W', 'O', ')', '=', 'T', 'U', 'W' | 0x80,
	'&', '(', 'T', ')', 'E', 'N', ' ', '=' | 0x80,
	'(', 'T', ')', '=', 'T' | 0x80,

	']', 'U' | 0x80,
	' ', '(', 'U', ')', ' ', '=', 'Y', 'U', 'W', '4' | 0x80,
	' ', '(', 'U', 'N', ')', 'I', '=', 'Y', 'U', 'W', 'N' | 0x80,
	' ', '(', 'U', 'N', ')', '=', 'A', 'H', 'N' | 0x80,
	' ', '(', 'U', 'P', 'O', 'N', ')', '=', 'A', 'X', 'P', 'A', 'O', 'N' | 0x80,
	'@', '(', 'U', 'R', ')', '#', '=', 'U', 'H', '4', 'R' | 0x80,
	'(', 'U', 'R', ')', '#', '=', 'Y', 'U', 'H', '4', 'R' | 0x80,
	'(', 'U', 'R', ')', '=', 'E', 'R' | 0x80,
	'(', 'U', ')', '^', ' ', '=', 'A', 'H' | 0x80,
	'(', 'U', ')', '^', '^', '=', 'A', 'H', '5' | 0x80,
	'(', 'U', 'Y', ')', '=', 'A', 'Y', '5' | 0x80,
	' ', 'G', '(', 'U', ')', '#', '=' | 0x80,
	'G', '(', 'U', ')', '%', '=' | 0x80,
	'G', '(', 'U', ')', '#', '=', 'W' | 0x80,
	'#', 'N', '(', 'U', ')', '=', 'Y', 'U', 'W' | 0x80,
	'@', '(', 'U', ')', '=', 'U', 'W' | 0x80,
	'(', 'U', ')', '=', 'Y', 'U', 'W' | 0x80,

	']', 'V' | 0x80,
	' ', '(', 'V', ')', ' ', '=', 'V', 'I', 'Y', '4' | 0x80,
	'(', 'V', 'I', 'E', 'W', ')', '=', 'V', 'Y', 'U', 'W', '5' | 0x80,
	'(', 'V', ')', '=', 'V' | 0x80,

	']', 'W' | 0x80,
	' ', '(', 'W', ')', ' ', '=', 'D', 'A', 'H', '4', 'B', 'U', 'L', 'Y', 'U', 'W' | 0x80,
	' ', '(', 'W', 'E', 'R', 'E', ')', '=', 'W', 'E', 'R' | 0x80,
	'(', 'W', 'A', ')', 'S', 'H', '=', 'W', 'A', 'A' | 0x80,
	'(', 'W', 'A', ')', 'S', 'T', '=', 'W', 'E', 'Y' | 0x80,
	'(', 'W', 'A', ')', 'S', '=', 'W', 'A', 'H' | 0x80,
	'(', 'W', 'A', ')', 'T', '=', 'W', 'A', 'A' | 0x80,
	'(', 'W', 'H', 'E', 'R', 'E', ')', '=', 'W', 'H', 'E', 'H', 'R' | 0x80,
	'(', 'W', 'H', 'A', 'T', ')', '=', 'W', 'H', 'A', 'H', 'T' | 0x80,
	'(', 'W', 'H', 'O', 'L', ')', '=', '/', 'H', 'O', 'W', 'L' | 0x80,
	'(', 'W', 'H', 'O', ')', '=', '/', 'H', 'U', 'W' | 0x80,
	'(', 'W', 'H', ')', '=', 'W', 'H' | 0x80,
	'(', 'W', 'A', 'R', ')', '#', '=', 'W', 'E', 'H', 'R' | 0x80,
	'(', 'W', 'A', 'R', ')', '=', 'W', 'A', 'O', 'R' | 0x80,
	'(', 'W', 'O', 'R', ')', '^', '=', 'W', 'E', 'R' | 0x80,
	'(', 'W', 'R', ')', '=', 'R' | 0x80,
	'(', 'W', 'O', 'M', ')', 'A', '=', 'W', 'U', 'H', 'M' | 0x80,
	'(', 'W', 'O', 'M', ')', 'E', '=', 'W', 'I', 'H', 'M' | 0x80,
	'(', 'W', 'E', 'A', ')', 'R', '=', 'W', 'E', 'H' | 0x80,
	'(', 'W', 'A', 'N', 'T', ')', '=', 'W', 'A', 'A', '5', 'N', 'T' | 0x80,
	'A', 'N', 'S', '(', 'W', 'E', 'R', ')', '=', 'E', 'R' | 0x80,
	'(', 'W', ')', '=', 'W' | 0x80,

	']', 'X' | 0x80,
	' ', '(', 'X', ')', ' ', '=', 'E', 'H', '4', 'K', 'R' | 0x80,
	' ', '(', 'X', ')', '=', 'Z' | 0x80,
	'(', 'X', ')', '=', 'K', 'S' | 0x80,

	']', 'Y' | 0x80,
	' ', '(', 'Y', ')', ' ', '=', 'W', 'A', 'Y', '4' | 0x80,
	'(', 'Y', 'O', 'U', 'N', 'G', ')', '=', 'Y', 'A', 'H', 'N', 'X' | 0x80,
	' ', '(', 'Y', 'O', 'U', 'R', ')', '=', 'Y', 'O', 'H', 'R' | 0x80,
	' ', '(', 'Y', 'O', 'U', ')', '=', 'Y', 'U', 'W' | 0x80,
	' ', '(', 'Y', 'E', 'S', ')', '=', 'Y', 'E', 'H', 'S' | 0x80,
	' ', '(', 'Y', ')', '=', 'Y' | 0x80,
	'F', '(', 'Y', ')', '=', 'A', 'Y' | 0x80,
	'P', 'S', '(', 'Y', 'C', 'H', ')', '=', 'A', 'Y', 'K' | 0x80,
	'#', ':', '^', '(', 'Y', ')', '=', 'I', 'Y' | 0x80,
	'#', ':', '^', '(', 'Y', ')', 'I', '=', 'I', 'Y' | 0x80,
	' ', ':', '(', 'Y', ')', ' ', '=', 'A', 'Y' | 0x80,
	' ', ':', '(', 'Y', ')', '#', '=', 'A', 'Y' | 0x80,
	' ', ':', '(', 'Y', ')', '^', '+', ':', '#', '=', 'I', 'H' | 0x80,
	' ', ':', '(', 'Y', ')', '^', '#', '=', 'A', 'Y' | 0x80,
	'(', 'Y', ')', '=', 'I', 'H' | 0x80,

	']', 'Z' | 0x80,
	' ', '(', 'Z', ')', ' ', '=', 'Z', 'I', 'Y', '4' | 0x80,
	'(', 'Z', ')', '=', 'Z' | 0x80,
	'j' | 0x80,
}

var rules2 = []byte{
	'(', 'A', ')', '=' | 0x80,
	'(', '!', ')', '=', '.' | 0x80,
	'(', '"', ')', ' ', '=', '-', 'A', 'H', '5', 'N', 'K', 'W', 'O', 'W', 'T', '-' | 0x80,
	'(', '"', ')', '=', 'K', 'W', 'O', 'W', '4', 'T', '-' | 0x80,
	'(', '#', ')', '=', ' ', 'N', 'A', 'H', '4', 'M', 'B', 'E', 'R' | 0x80,
	'(', '$', ')', '=', ' ', 'D', 'A', 'A', '4', 'L', 'E', 'R' | 0x80,
	'(', '%', ')', '=', ' ', 'P', 'E', 'R', 'S', 'E', 'H', '4', 'N', 'T' | 0x80,
	'(', '&', ')', '=', ' ', 'A', 'E', 'N', 'D' | 0x80,
	'(', '\'', ')', '=' | 0x80,
	'(', '*', ')', '=', ' ', 'A', 'E', '4', 'S', 'T', 'E', 'R', 'I', 'H', 'S', 'K' | 0x80,
	'(', '+', ')', '=', ' ', 'P', 'L', 'A', 'H', '4', 'S' | 0x80,
	'(', ',', ')', '=', ',' | 0x80,
	' ', '(', '-', ')', ' ', '=', '-' | 0x80,
	'(', '-', ')', '=' | 0x80,
	'(', '.', ')', '=', ' ', 'P', 'O', 'Y', 'N', 'T' | 0x80,
	'(', '/', ')', '=', ' ', 'S', 'L', 'A', 'E', '4', 'S', 'H' | 0x80,
	'(', '0', ')', '=', ' ', 'Z', 'I', 'Y', '4', 'R', 'O', 'W' | 0x80,
	' ', '(', '1', 'S', 'T', ')', '=', 'F', 'E', 'R', '4', 'S', 'T' | 0x80,
	' ', '(', '1', '0', 'T', 'H', ')', '=', 'T', 'E', 'H', '4', 'N', 'T', 'H' | 0x80,
	'(', '1', ')', '=', ' ', 'W', 'A', 'H', '4', 'N' | 0x80,
	' ', '(', '2', 'N', 'D', ')', '=', 'S', 'E', 'H', '4', 'K', 'U', 'N', 'D' | 0x80,
	'(', '2', ')', '=', ' ', 'T', 'U', 'W', '4' | 0x80,
	' ', '(', '3', 'R', 'D', ')', '=', 'T', 'H', 'E', 'R', '4', 'D' | 0x80,
	'(', '3', ')', '=', ' ', 'T', 'H', 'R', 'I', 'Y', '4' | 0x80,
	'(', '4', ')', '=', ' ', 'F', 'O', 'H', '4', 'R' | 0x80,
	' ', '(', '5', 'T', 'H', ')', '=', 'F', 'I', 'H', '4', 'F', 'T', 'H' | 0x80,
	'(', '5', ')', '=', ' ', 'F', 'A', 'Y', '4', 'V' | 0x80,
	' ', '(', '6', '4', ')', ' ', '=', 'S', 'I', 'H', '4', 'K', 'S', 'T', 'I', 'Y', ' ', 'F', 'O', 'H', 'R' | 0x80,
	'(', '6', ')', '=', ' ', 'S', 'I', 'H', '4', 'K', 'S' | 0x80,
	'(', '7', ')', '=', ' ', 'S', 'E', 'H', '4', 'V', 'U', 'N' | 0x80,
	' ', '(', '8', 'T', 'H', ')', '=', 'E', 'Y', '4', 'T', 'H' | 0x80,
	'(', '8', ')', '=', ' ', 'E', 'Y', '4', 'T' | 0x80,
	'(', '9', ')', '=', ' ', 'N', 'A', 'Y', '4', 'N' | 0x80,
	'(', ':', ')', '=', '.' | 0x80,
	'(', ';', ')', '=', '.' | 0x80,
	'(', '<', ')', '=', ' ', 'L', 'E', 'H', '4', 'S', ' ', 'D', 'H', 'A', 'E', 'N' | 0x80,
	'(', '=', ')', '=', ' ', 'I', 'Y', '4', 'K', 'W', 'U', 'L', 'Z' | 0x80,
	'(', '>', ')', '=', ' ', 'G', 'R', 'E', 'Y', '4', 'T', 'E', 'R', ' ', 'D', 'H', 'A', 'E', 'N' | 0x80,
	'(', '?', ')', '=', '?' | 0x80,
	'(', '@', ')', '=', ' ', 'A', 'E', '6', 'T' | 0x80,
	'(', '^', ')', '=', ' ', 'K', 'A', 'E', '4', 'R', 'I', 'X', 'T' | 0x80,
	']', 'A' | 0x80,
}

// 26 items. From 'A' to 'Z'
// positions for mem62 and mem63 for each character
var tab37489 = []byte{0, 149, 247, 162, 57, 197, 6, 126, 199,
	38, 55, 78, 145, 241, 85, 161, 254, 36,
	69, 45, 167, 54, 83, 46, 71, 218}

var tab37515 = []byte{125, 126, 126, 127, 128, 129, 130, 130, 130,
	132, 132, 132, 132, 132, 133, 135, 135, 136,
	136, 137, 138, 139, 139, 140, 140, 140}

var unvoicedAmplitude = []byte{0x18, 0x1A, 0x17, 0x17, 0x17}
var tab47492 = []byte{0x00, 0x00, 0xE0, 0xE6, 0xEC, 0xF3,
	0xF9, 0x00, 0x06, 0x0C, 0x06}
var amplitudeRescale = []byte{
	0x00,
	0x01,
	0x02,
	0x02,
	0x02,
	0x03,
	0x03,
	0x04,
	0x04,
	0x05,
	0x06,
	0x08,
	0x09,
	0x0B,
	0x0D,
	0x0F,
	0x00,
	// 17 elements?
}

// Used to decide which phoneme's blend lengths. The candidate with the lower
// score is selected. tab45856
var blendRank = []byte{
	0x00, 0x1F, 0x1F, 0x1F, 0x1F, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02,
	0x02, 0x02, 0x05, 0x05, 0x02, 0x0A, 0x02, 0x08, 0x05, 0x05, 0x0B, 0x0A,
	0x09, 0x08, 0x08, 0xA0, 0x08, 0x08, 0x17, 0x1F, 0x12, 0x12, 0x12, 0x12,
	0x1E, 0x1E, 0x14, 0x14, 0x14, 0x14, 0x17, 0x17, 0x1A, 0x1A, 0x1D, 0x1D,
	0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x1A, 0x1D, 0x1B, 0x1A, 0x1D, 0x1B,
	0x1A, 0x1D, 0x1B, 0x1A, 0x1D, 0x1B, 0x17, 0x1D, 0x17, 0x17, 0x1D, 0x17,
	0x17, 0x1D, 0x17, 0x17, 0x1D, 0x17, 0x17, 0x17}

// Number of frames at the end of a phoneme devoted to interpolating to next
// phoneme's final value
// tab45696
var outBlendLength = []byte{
	0x00, 0x02, 0x02, 0x02, 0x02, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
	0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x03, 0x02, 0x04, 0x04, 0x02, 0x02,
	0x02, 0x02, 0x02, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
	0x01, 0x01, 0x02, 0x02, 0x02, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x05,
	0x05, 0x05, 0x05, 0x05, 0x04, 0x04, 0x02, 0x00, 0x01, 0x02, 0x00, 0x01,
	0x02, 0x00, 0x01, 0x02, 0x00, 0x01, 0x02, 0x00, 0x02, 0x02, 0x00, 0x01,
	0x03, 0x00, 0x02, 0x03, 0x00, 0x02, 0xA0, 0xA0}

// Number of frames at beginning of a phoneme devoted to interpolating to
// phoneme's final value
// tab45776
var inBlendLength = []byte{
	0x00, 0x02, 0x02, 0x02, 0x02, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
	0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x03, 0x03, 0x04, 0x04, 0x03, 0x03,
	0x03, 0x03, 0x03, 0x01, 0x02, 0x03, 0x02, 0x01, 0x03, 0x03, 0x03, 0x03,
	0x01, 0x01, 0x03, 0x03, 0x03, 0x02, 0x02, 0x03, 0x02, 0x03, 0x00, 0x00,
	0x05, 0x05, 0x05, 0x05, 0x04, 0x04, 0x02, 0x00, 0x02, 0x02, 0x00, 0x03,
	0x02, 0x00, 0x04, 0x02, 0x00, 0x03, 0x02, 0x00, 0x02, 0x02, 0x00, 0x02,
	0x03, 0x00, 0x03, 0x03, 0x00, 0x03, 0xB0, 0xA0}

// Looks like it's used as bit flags
// High bits masked by 248 (11111000)
//
// 32: S*    241         11110001
// 33: SH    226         11100010
// 34: F*    211         11010011
// 35: TH    187         10111011
// 36: /H    124         01111100
// 37: /X    149         10010101
// 38: Z*    1           00000001
// 39: ZH    2           00000010
// 40: V*    3           00000011
// 41: DH    3           00000011
// 43: **    114         01110010
// 45: **    2           00000010
// 67: **    27          00011011
// 70: **    25          00011001

// tab45936
var sampledConsonantFlags = []byte{
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xF1, 0xE2, 0xD3, 0xBB, 0x7C, 0x95, 0x01, 0x02,
	0x03, 0x03, 0x00, 0x72, 0x00, 0x02, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x1B, 0x00, 0x00, 0x19, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
}

// tab45056
var freq1data = []byte{
	0x00, 0x13, 0x13, 0x13, 0x13, 0x0A, 0x0E, 0x12, 0x18, 0x1A, 0x16, 0x14,
	0x10, 0x14, 0x0E, 0x12, 0x0E, 0x12, 0x12, 0x10, 0x0C, 0x0E, 0x0A, 0x12,
	0x0E, 0x0A, 0x08, 0x06, 0x06, 0x06, 0x06, 0x11, 0x06, 0x06, 0x06, 0x06,
	0x0E, 0x10, 0x09, 0x0A, 0x08, 0x0A, 0x06, 0x06, 0x06, 0x05, 0x06, 0x00,
	0x12, 0x1A, 0x14, 0x1A, 0x12, 0x0C, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06,
	0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06,
	0x06, 0x0A, 0x0A, 0x06, 0x06, 0x06, 0x2C, 0x13}

// tab451356
var freq2data = []byte{
	0x00, 0x43, 0x43, 0x43, 0x43, 0x54, 0x48, 0x42, 0x3E, 0x28, 0x2C, 0x1E,
	0x24, 0x2C, 0x48, 0x30, 0x24, 0x1E, 0x32, 0x24, 0x1C, 0x44, 0x18, 0x32,
	0x1E, 0x18, 0x52, 0x2E, 0x36, 0x56, 0x36, 0x43, 0x49, 0x4F, 0x1A, 0x42,
	0x49, 0x25, 0x33, 0x42, 0x28, 0x2F, 0x4F, 0x4F, 0x42, 0x4F, 0x6E, 0x00,
	0x48, 0x26, 0x1E, 0x2A, 0x1E, 0x22, 0x1A, 0x1A, 0x1A, 0x42, 0x42, 0x42,
	0x6E, 0x6E, 0x6E, 0x54, 0x54, 0x54, 0x1A, 0x1A, 0x1A, 0x42, 0x42, 0x42,
	0x6D, 0x56, 0x6D, 0x54, 0x54, 0x54, 0x7F, 0x7F}

// tab45216
var freq3data = []byte{
	0x00, 0x5B, 0x5B, 0x5B, 0x5B, 0x6E, 0x5D, 0x5B, 0x58, 0x59, 0x57, 0x58,
	0x52, 0x59, 0x5D, 0x3E, 0x52, 0x58, 0x3E, 0x6E, 0x50, 0x5D, 0x5A, 0x3C,
	0x6E, 0x5A, 0x6E, 0x51, 0x79, 0x65, 0x79, 0x5B, 0x63, 0x6A, 0x51, 0x79,
	0x5D, 0x52, 0x5D, 0x67, 0x4C, 0x5D, 0x65, 0x65, 0x79, 0x65, 0x79, 0x00,
	0x5A, 0x58, 0x58, 0x58, 0x58, 0x52, 0x51, 0x51, 0x51, 0x79, 0x79, 0x79,
	0x70, 0x6E, 0x6E, 0x5E, 0x5E, 0x5E, 0x51, 0x51, 0x51, 0x79, 0x79, 0x79,
	0x65, 0x65, 0x70, 0x5E, 0x5E, 0x5E, 0x08, 0x01}

var ampl1data = []byte{
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0x0D, 0x0E, 0x0F, 0x0F, 0x0F, 0x0F,
	0x0F, 0x0C, 0x0D, 0x0C, 0x0F, 0x0F, 0x0D, 0x0D, 0x0D, 0x0E, 0x0D, 0x0C,
	0x0D, 0x0D, 0x0D, 0x0C, 0x09, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x0B, 0x0B, 0x0B, 0x0B, 0x00, 0x00, 0x01, 0x0B, 0x00, 0x02,
	0x0E, 0x0F, 0x0F, 0x0F, 0x0F, 0x0D, 0x02, 0x04, 0x00, 0x02, 0x04, 0x00,
	0x01, 0x04, 0x00, 0x01, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF}

var ampl2data = []byte{
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x0B, 0x0D, 0x0E, 0x0D, 0x0C, 0x0C,
	0x0B, 0x09, 0x0B, 0x0B, 0x0C, 0x0C, 0x0C, 0x08, 0x08, 0x0C, 0x08, 0x0A,
	0x08, 0x08, 0x0A, 0x03, 0x09, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x03, 0x05, 0x03, 0x04, 0x00, 0x00, 0x00, 0x05, 0x0A, 0x02,
	0x0E, 0x0D, 0x0C, 0x0D, 0x0C, 0x08, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00,
	0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x0A, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00}

var ampl3data = []byte{
	0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x07, 0x08, 0x08, 0x01, 0x01, 0x00,
	0x01, 0x00, 0x07, 0x05, 0x01, 0x00, 0x06, 0x01, 0x00, 0x07, 0x00, 0x05,
	0x01, 0x00, 0x08, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0E, 0x01,
	0x09, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x07, 0x00, 0x00, 0x05, 0x00, 0x13, 0x10}

// 0x500 bytes of data
var sampleTable = []byte{
	// 00
	0x38, 0x84, 0x6B, 0x19, 0xC6, 0x63, 0x18, 0x86,
	0x73, 0x98, 0xC6, 0xB1, 0x1C, 0xCA, 0x31, 0x8C,
	0xC7, 0x31, 0x88, 0xC2, 0x30, 0x98, 0x46, 0x31,
	0x18, 0xC6, 0x35, 0x0C, 0xCA, 0x31, 0x0C, 0xC6,
	// 20
	0x21, 0x10, 0x24, 0x69, 0x12, 0xC2, 0x31, 0x14,
	0xC4, 0x71, 0x08, 0x4A, 0x22, 0x49, 0xAB, 0x6A,
	0xA8, 0xAC, 0x49, 0x51, 0x32, 0xD5, 0x52, 0x88,
	0x93, 0x6C, 0x94, 0x22, 0x15, 0x54, 0xD2, 0x25,
	// 40
	0x96, 0xD4, 0x50, 0xA5, 0x46, 0x21, 0x08, 0x85,
	0x6B, 0x18, 0xC4, 0x63, 0x10, 0xCE, 0x6B, 0x18,
	0x8C, 0x71, 0x19, 0x8C, 0x63, 0x35, 0x0C, 0xC6,
	0x33, 0x99, 0xCC, 0x6C, 0xB5, 0x4E, 0xA2, 0x99,
	// 60
	0x46, 0x21, 0x28, 0x82, 0x95, 0x2E, 0xE3, 0x30,
	0x9C, 0xC5, 0x30, 0x9C, 0xA2, 0xB1, 0x9C, 0x67,
	0x31, 0x88, 0x66, 0x59, 0x2C, 0x53, 0x18, 0x84,
	0x67, 0x50, 0xCA, 0xE3, 0x0A, 0xAC, 0xAB, 0x30,
	// 80
	0xAC, 0x62, 0x30, 0x8C, 0x63, 0x10, 0x94, 0x62,
	0xB1, 0x8C, 0x82, 0x28, 0x96, 0x33, 0x98, 0xD6,
	0xB5, 0x4C, 0x62, 0x29, 0xA5, 0x4A, 0xB5, 0x9C,
	0xC6, 0x31, 0x14, 0xD6, 0x38, 0x9C, 0x4B, 0xB4,
	// A0
	0x86, 0x65, 0x18, 0xAE, 0x67, 0x1C, 0xA6, 0x63,
	0x19, 0x96, 0x23, 0x19, 0x84, 0x13, 0x08, 0xA6,
	0x52, 0xAC, 0xCA, 0x22, 0x89, 0x6E, 0xAB, 0x19,
	0x8C, 0x62, 0x34, 0xC4, 0x62, 0x19, 0x86, 0x63,
	// C0
	0x18, 0xC4, 0x23, 0x58, 0xD6, 0xA3, 0x50, 0x42,
	0x54, 0x4A, 0xAD, 0x4A, 0x25, 0x11, 0x6B, 0x64,
	0x89, 0x4A, 0x63, 0x39, 0x8A, 0x23, 0x31, 0x2A,
	0xEA, 0xA2, 0xA9, 0x44, 0xC5, 0x12, 0xCD, 0x42,
	// E0
	0x34, 0x8C, 0x62, 0x18, 0x8C, 0x63, 0x11, 0x48,
	0x66, 0x31, 0x9D, 0x44, 0x33, 0x1D, 0x46, 0x31,
	0x9C, 0xC6, 0xB1, 0x0C, 0xCD, 0x32, 0x88, 0xC4,
	0x73, 0x18, 0x86, 0x73, 0x08, 0xD6, 0x63, 0x58,
	// 100
	0x07, 0x81, 0xE0, 0xF0, 0x3C, 0x07, 0x87, 0x90,
	0x3C, 0x7C, 0x0F, 0xC7, 0xC0, 0xC0, 0xF0, 0x7C,
	0x1E, 0x07, 0x80, 0x80, 0x00, 0x1C, 0x78, 0x70,
	0xF1, 0xC7, 0x1F, 0xC0, 0x0C, 0xFE, 0x1C, 0x1F,
	// 120
	0x1F, 0x0E, 0x0A, 0x7A, 0xC0, 0x71, 0xF2, 0x83,
	0x8F, 0x03, 0x0F, 0x0F, 0x0C, 0x00, 0x79, 0xF8,
	0x61, 0xE0, 0x43, 0x0F, 0x83, 0xE7, 0x18, 0xF9,
	0xC1, 0x13, 0xDA, 0xE9, 0x63, 0x8F, 0x0F, 0x83,
	// 140
	0x83, 0x87, 0xC3, 0x1F, 0x3C, 0x70, 0xF0, 0xE1,
	0xE1, 0xE3, 0x87, 0xB8, 0x71, 0x0E, 0x20, 0xE3,
	0x8D, 0x48, 0x78, 0x1C, 0x93, 0x87, 0x30, 0xE1,
	0xC1, 0xC1, 0xE4, 0x78, 0x21, 0x83, 0x83, 0xC3,
	// 160
	0x87, 0x06, 0x39, 0xE5, 0xC3, 0x87, 0x07, 0x0E,
	0x1C, 0x1C, 0x70, 0xF4, 0x71, 0x9C, 0x60, 0x36,
	0x32, 0xC3, 0x1E, 0x3C, 0xF3, 0x8F, 0x0E, 0x3C,
	0x70, 0xE3, 0xC7, 0x8F, 0x0F, 0x0F, 0x0E, 0x3C,
	// 180
	0x78, 0xF0, 0xE3, 0x87, 0x06, 0xF0, 0xE3, 0x07,
	0xC1, 0x99, 0x87, 0x0F, 0x18, 0x78, 0x70, 0x70,
	0xFC, 0xF3, 0x10, 0xB1, 0x8C, 0x8C, 0x31, 0x7C,
	0x70, 0xE1, 0x86, 0x3C, 0x64, 0x6C, 0xB0, 0xE1,
	// 1A0
	0xE3, 0x0F, 0x23, 0x8F, 0x0F, 0x1E, 0x3E, 0x38,
	0x3C, 0x38, 0x7B, 0x8F, 0x07, 0x0E, 0x3C, 0xF4,
	0x17, 0x1E, 0x3C, 0x78, 0xF2, 0x9E, 0x72, 0x49,
	0xE3, 0x25, 0x36, 0x38, 0x58, 0x39, 0xE2, 0xDE,
	// 1C0
	0x3C, 0x78, 0x78, 0xE1, 0xC7, 0x61, 0xE1, 0xE1,
	0xB0, 0xF0, 0xF0, 0xC3, 0xC7, 0x0E, 0x38, 0xC0,
	0xF0, 0xCE, 0x73, 0x73, 0x18, 0x34, 0xB0, 0xE1,
	0xC7, 0x8E, 0x1C, 0x3C, 0xF8, 0x38, 0xF0, 0xE1,
	// 1E0
	0xC1, 0x8B, 0x86, 0x8F, 0x1C, 0x78, 0x70, 0xF0,
	0x78, 0xAC, 0xB1, 0x8F, 0x39, 0x31, 0xDB, 0x38,
	0x61, 0xC3, 0x0E, 0x0E, 0x38, 0x78, 0x73, 0x17,
	0x1E, 0x39, 0x1E, 0x38, 0x64, 0xE1, 0xF1, 0xC1,
	// 200
	0x4E, 0x0F, 0x40, 0xA2, 0x02, 0xC5, 0x8F, 0x81,
	0xA1, 0xFC, 0x12, 0x08, 0x64, 0xE0, 0x3C, 0x22,
	0xE0, 0x45, 0x07, 0x8E, 0x0C, 0x32, 0x90, 0xF0,
	0x1F, 0x20, 0x49, 0xE0, 0xF8, 0x0C, 0x60, 0xF0,
	// 220
	0x17, 0x1A, 0x41, 0xAA, 0xA4, 0xD0, 0x8D, 0x12,
	0x82, 0x1E, 0x1E, 0x03, 0xF8, 0x3E, 0x03, 0x0C,
	0x73, 0x80, 0x70, 0x44, 0x26, 0x03, 0x24, 0xE1,
	0x3E, 0x04, 0x4E, 0x04, 0x1C, 0xC1, 0x09, 0xCC,
	// 240
	0x9E, 0x90, 0x21, 0x07, 0x90, 0x43, 0x64, 0xC0,
	0x0F, 0xC6, 0x90, 0x9C, 0xC1, 0x5B, 0x03, 0xE2,
	0x1D, 0x81, 0xE0, 0x5E, 0x1D, 0x03, 0x84, 0xB8,
	0x2C, 0x0F, 0x80, 0xB1, 0x83, 0xE0, 0x30, 0x41,
	// 260
	0x1E, 0x43, 0x89, 0x83, 0x50, 0xFC, 0x24, 0x2E,
	0x13, 0x83, 0xF1, 0x7C, 0x4C, 0x2C, 0xC9, 0x0D,
	0x83, 0xB0, 0xB5, 0x82, 0xE4, 0xE8, 0x06, 0x9C,
	0x07, 0xA0, 0x99, 0x1D, 0x07, 0x3E, 0x82, 0x8F,
	// 280
	0x70, 0x30, 0x74, 0x40, 0xCA, 0x10, 0xE4, 0xE8,
	0x0F, 0x92, 0x14, 0x3F, 0x06, 0xF8, 0x84, 0x88,
	0x43, 0x81, 0x0A, 0x34, 0x39, 0x41, 0xC6, 0xE3,
	0x1C, 0x47, 0x03, 0xB0, 0xB8, 0x13, 0x0A, 0xC2,
	// 2A0
	0x64, 0xF8, 0x18, 0xF9, 0x60, 0xB3, 0xC0, 0x65,
	0x20, 0x60, 0xA6, 0x8C, 0xC3, 0x81, 0x20, 0x30,
	0x26, 0x1E, 0x1C, 0x38, 0xD3, 0x01, 0xB0, 0x26,
	0x40, 0xF4, 0x0B, 0xC3, 0x42, 0x1F, 0x85, 0x32,
	// 2C0
	0x26, 0x60, 0x40, 0xC9, 0xCB, 0x01, 0xEC, 0x11,
	0x28, 0x40, 0xFA, 0x04, 0x34, 0xE0, 0x70, 0x4C,
	0x8C, 0x1D, 0x07, 0x69, 0x03, 0x16, 0xC8, 0x04,
	0x23, 0xE8, 0xC6, 0x9A, 0x0B, 0x1A, 0x03, 0xE0,
	// 2E0
	0x76, 0x06, 0x05, 0xCF, 0x1E, 0xBC, 0x58, 0x31,
	0x71, 0x66, 0x00, 0xF8, 0x3F, 0x04, 0xFC, 0x0C,
	0x74, 0x27, 0x8A, 0x80, 0x71, 0xC2, 0x3A, 0x26,
	0x06, 0xC0, 0x1F, 0x05, 0x0F, 0x98, 0x40, 0xAE,
	// 300
	0x01, 0x7F, 0xC0, 0x07, 0xFF, 0x00, 0x0E, 0xFE,
	0x00, 0x03, 0xDF, 0x80, 0x03, 0xEF, 0x80, 0x1B,
	0xF1, 0xC2, 0x00, 0xE7, 0xE0, 0x18, 0xFC, 0xE0,
	0x21, 0xFC, 0x80, 0x3C, 0xFC, 0x40, 0x0E, 0x7E,
	// 320
	0x00, 0x3F, 0x3E, 0x00, 0x0F, 0xFE, 0x00, 0x1F,
	0xFF, 0x00, 0x3E, 0xF0, 0x07, 0xFC, 0x00, 0x7E,
	0x10, 0x3F, 0xFF, 0x00, 0x3F, 0x38, 0x0E, 0x7C,
	0x01, 0x87, 0x0C, 0xFC, 0xC7, 0x00, 0x3E, 0x04,
	// 340
	0x0F, 0x3E, 0x1F, 0x0F, 0x0F, 0x1F, 0x0F, 0x02,
	0x83, 0x87, 0xCF, 0x03, 0x87, 0x0F, 0x3F, 0xC0,
	0x07, 0x9E, 0x60, 0x3F, 0xC0, 0x03, 0xFE, 0x00,
	0x3F, 0xE0, 0x77, 0xE1, 0xC0, 0xFE, 0xE0, 0xC3,
	// 360
	0xE0, 0x01, 0xDF, 0xF8, 0x03, 0x07, 0x00, 0x7E,
	0x70, 0x00, 0x7C, 0x38, 0x18, 0xFE, 0x0C, 0x1E,
	0x78, 0x1C, 0x7C, 0x3E, 0x0E, 0x1F, 0x1E, 0x1E,
	0x3E, 0x00, 0x7F, 0x83, 0x07, 0xDB, 0x87, 0x83,
	// 380
	0x07, 0xC7, 0x07, 0x10, 0x71, 0xFF, 0x00, 0x3F,
	0xE2, 0x01, 0xE0, 0xC1, 0xC3, 0xE1, 0x00, 0x7F,
	0xC0, 0x05, 0xF0, 0x20, 0xF8, 0xF0, 0x70, 0xFE,
	0x78, 0x79, 0xF8, 0x02, 0x3F, 0x0C, 0x8F, 0x03,
	// 3a0
	0x0F, 0x9F, 0xE0, 0xC1, 0xC7, 0x87, 0x03, 0xC3,
	0xC3, 0xB0, 0xE1, 0xE1, 0xC1, 0xE3, 0xE0, 0x71,
	0xF0, 0x00, 0xFC, 0x70, 0x7C, 0x0C, 0x3E, 0x38,
	0x0E, 0x1C, 0x70, 0xC3, 0xC7, 0x03, 0x81, 0xC1,
	// 3c0
	0xC7, 0xE7, 0x00, 0x0F, 0xC7, 0x87, 0x19, 0x09,
	0xEF, 0xC4, 0x33, 0xE0, 0xC1, 0xFC, 0xF8, 0x70,
	0xF0, 0x78, 0xF8, 0xF0, 0x61, 0xC7, 0x00, 0x1F,
	0xF8, 0x01, 0x7C, 0xF8, 0xF0, 0x78, 0x70, 0x3C,
	// 3e0
	0x7C, 0xCE, 0x0E, 0x21, 0x83, 0xCF, 0x08, 0x07,
	0x8F, 0x08, 0xC1, 0x87, 0x8F, 0x80, 0xC7, 0xE3,
	0x00, 0x07, 0xF8, 0xE0, 0xEF, 0x00, 0x39, 0xF7,
	0x80, 0x0E, 0xF8, 0xE1, 0xE3, 0xF8, 0x21, 0x9F,
	// 400
	0xC0, 0xFF, 0x03, 0xF8, 0x07, 0xC0, 0x1F, 0xF8,
	0xC4, 0x04, 0xFC, 0xC4, 0xC1, 0xBC, 0x87, 0xF0,
	0x0F, 0xC0, 0x7F, 0x05, 0xE0, 0x25, 0xEC, 0xC0,
	0x3E, 0x84, 0x47, 0xF0, 0x8E, 0x03, 0xF8, 0x03,
	// 420
	0xFB, 0xC0, 0x19, 0xF8, 0x07, 0x9C, 0x0C, 0x17,
	0xF8, 0x07, 0xE0, 0x1F, 0xA1, 0xFC, 0x0F, 0xFC,
	0x01, 0xF0, 0x3F, 0x00, 0xFE, 0x03, 0xF0, 0x1F,
	0x00, 0xFD, 0x00, 0xFF, 0x88, 0x0D, 0xF9, 0x01,
	// 440
	0xFF, 0x00, 0x70, 0x07, 0xC0, 0x3E, 0x42, 0xF3,
	0x0D, 0xC4, 0x7F, 0x80, 0xFC, 0x07, 0xF0, 0x5E,
	0xC0, 0x3F, 0x00, 0x78, 0x3F, 0x81, 0xFF, 0x01,
	0xF8, 0x01, 0xC3, 0xE8, 0x0C, 0xE4, 0x64, 0x8F,
	// 460
	0xE4, 0x0F, 0xF0, 0x07, 0xF0, 0xC2, 0x1F, 0x00,
	0x7F, 0xC0, 0x6F, 0x80, 0x7E, 0x03, 0xF8, 0x07,
	0xF0, 0x3F, 0xC0, 0x78, 0x0F, 0x82, 0x07, 0xFE,
	0x22, 0x77, 0x70, 0x02, 0x76, 0x03, 0xFE, 0x00,
	// 480
	0xFE, 0x67, 0x00, 0x7C, 0xC7, 0xF1, 0x8E, 0xC6,
	0x3B, 0xE0, 0x3F, 0x84, 0xF3, 0x19, 0xD8, 0x03,
	0x99, 0xFC, 0x09, 0xB8, 0x0F, 0xF8, 0x00, 0x9D,
	0x24, 0x61, 0xF9, 0x0D, 0x00, 0xFD, 0x03, 0xF0,
	// 4a0
	0x1F, 0x90, 0x3F, 0x01, 0xF8, 0x1F, 0xD0, 0x0F,
	0xF8, 0x37, 0x01, 0xF8, 0x07, 0xF0, 0x0F, 0xC0,
	0x3F, 0x00, 0xFE, 0x03, 0xF8, 0x0F, 0xC0, 0x3F,
	0x00, 0xFA, 0x03, 0xF0, 0x0F, 0x80, 0xFF, 0x01,
	// 4c0
	0xB8, 0x07, 0xF0, 0x01, 0xFC, 0x01, 0xBC, 0x80,
	0x13, 0x1E, 0x00, 0x7F, 0xE1, 0x40, 0x7F, 0xA0,
	0x7F, 0xB0, 0x00, 0x3F, 0xC0, 0x1F, 0xC0, 0x38,
	0x0F, 0xF0, 0x1F, 0x80, 0xFF, 0x01, 0xFC, 0x03,
	// 4e0
	0xF1, 0x7E, 0x01, 0xFE, 0x01, 0xF0, 0xFF, 0x00,
	0x7F, 0xC0, 0x1D, 0x07, 0xF0, 0x0F, 0xC0, 0x7E,
	0x06, 0xE0, 0x07, 0xE0, 0x0F, 0xF8, 0x06, 0xC1,
	0xFE, 0x01, 0xFC, 0x03, 0xE0, 0x0F, 0x00, 0xFC,
}

// tab40672
var stressInputTable = []byte{'*', '1', '2', '3', '4',
	'5', '6', '7', '8'}

// tab40682
var signInputTable1 = []byte{
	' ', '.', '?', ',', '-', 'I', 'I', 'E', 'A', 'A', 'A', 'A', 'U', 'A',
	'I', 'E', 'U', 'O', 'R', 'L', 'W', 'Y', 'W', 'R', 'L', 'W', 'Y', 'M',
	'N', 'N', 'D', 'Q', 'S', 'S', 'F', 'T', '/', '/', 'Z', 'Z', 'V', 'D',
	'C', '*', 'J', '*', '*', '*', 'E', 'A', 'O', 'A', 'O', 'U', 'B', '*',
	'*', 'D', '*', '*', 'G', '*', '*', 'G', '*', '*', 'P', '*', '*', 'T',
	'*', '*', 'K', '*', '*', 'K', '*', '*', 'U', 'U', 'U'}

// tab40763
var signInputTable2 = []byte{
	'*', '*', '*', '*', '*', 'Y', 'H', 'H', 'E', 'A', 'H', 'O', 'H', 'X',
	'X', 'R', 'X', 'H', 'X', 'X', 'X', 'X', 'H', '*', '*', '*', '*', '*',
	'*', 'X', 'X', '*', '*', 'H', '*', 'H', 'H', 'X', '*', 'H', '*', 'H',
	'H', '*', '*', '*', '*', '*', 'Y', 'Y', 'Y', 'W', 'W', 'W', '*', '*',
	'*', '*', '*', '*', '*', '*', '*', 'X', '*', '*', '*', '*', '*', '*',
	'*', '*', '*', '*', '*', 'X', '*', '*', 'L', 'M', 'N'}

const (
	END                = 255
	BREAK              = 254
	pR                 = 23
	pT                 = 69
	pD                 = 57
	PHONEME_PERIOD     = 0x1
	RISING_INFLECTION  = 0x1
	PHONEME_QUESTION   = 0x2
	FALLING_INFLECTION = 0x2
)

// tab45616???
var phonemeStressedLengthTable = []byte{
	0x00, 0x12, 0x12, 0x12, 0x08, 0x0B, 0x09, 0x0B, 0x0E, 0x0F, 0x0B, 0x10,
	0x0C, 0x06, 0x06, 0x0E, 0x0C, 0x0E, 0x0C, 0x0B, 0x08, 0x08, 0x0B, 0x0A,
	0x09, 0x08, 0x08, 0x08, 0x08, 0x08, 0x03, 0x05, 0x02, 0x02, 0x02, 0x02,
	0x02, 0x02, 0x06, 0x06, 0x08, 0x06, 0x06, 0x02, 0x09, 0x04, 0x02, 0x01,
	0x0E, 0x0F, 0x0F, 0x0F, 0x0E, 0x0E, 0x08, 0x02, 0x02, 0x07, 0x02, 0x01,
	0x07, 0x02, 0x02, 0x07, 0x02, 0x02, 0x08, 0x02, 0x02, 0x06, 0x02, 0x02,
	0x07, 0x02, 0x04, 0x07, 0x01, 0x04, 0x05, 0x05}

// tab45536???
var phonemeLengthTable = []byte{
	0x00, 0x12, 0x12, 0x12, 0x08, 0x08, 0x08, 0x08, 0x08, 0x0B, 0x06, 0x0C,
	0x0A, 0x05, 0x05, 0x0B, 0x0A, 0x0A, 0x0A, 0x09, 0x08, 0x07, 0x09, 0x07,
	0x06, 0x08, 0x06, 0x07, 0x07, 0x07, 0x02, 0x05, 0x02, 0x02, 0x02, 0x02,
	0x02, 0x02, 0x06, 0x06, 0x07, 0x06, 0x06, 0x02, 0x08, 0x03, 0x01, 0x1E,
	0x0D, 0x0C, 0x0C, 0x0C, 0x0E, 0x09, 0x06, 0x01, 0x02, 0x05, 0x01, 0x01,
	0x06, 0x01, 0x02, 0x06, 0x01, 0x02, 0x08, 0x02, 0x02, 0x04, 0x02, 0x02,
	0x06, 0x01, 0x04, 0x06, 0x01, 0x04, 0xC7, 0xFF}

/*

Ind  | phoneme |  flags   |
-----|---------|----------|
0    |   *     | 00000000 |
1    |  .*     | 00000000 |
2    |  ?*     | 00000000 |
3    |  ,*     | 00000000 |
4    |  -*     | 00000000 |

VOWELS
5    |  IY     | 10100100 |
6    |  IH     | 10100100 |
7    |  EH     | 10100100 |
8    |  AE     | 10100100 |
9    |  AA     | 10100100 |
10   |  AH     | 10100100 |
11   |  AO     | 10000100 |
17   |  OH     | 10000100 |
12   |  UH     | 10000100 |
16   |  UX     | 10000100 |
15   |  ER     | 10000100 |
13   |  AX     | 10100100 |
14   |  IX     | 10100100 |

DIPTHONGS
48   |  EY     | 10110100 |
49   |  AY     | 10110100 |
50   |  OY     | 10110100 |
51   |  AW     | 10010100 |
52   |  OW     | 10010100 |
53   |  UW     | 10010100 |


21   |  YX     | 10000100 |
20   |  WX     | 10000100 |
18   |  RX     | 10000100 |
19   |  LX     | 10000100 |
37   |  /X     | 01000000 |
30   |  DX     | 01001000 |


22   |  WH     | 01000100 |


VOICED CONSONANTS
23   |  R*     | 01000100 |
24   |  L*     | 01000100 |
25   |  W*     | 01000100 |
26   |  Y*     | 01000100 |
27   |  M*     | 01001100 |
28   |  N*     | 01001100 |
29   |  NX     | 01001100 |
54   |  B*     | 01001110 |
57   |  D*     | 01001110 |
60   |  G*     | 01001110 |
44   |  J*     | 01001100 |
38   |  Z*     | 01000100 |
39   |  ZH     | 01000100 |
40   |  V*     | 01000100 |
41   |  DH     | 01000100 |

unvoiced CONSONANTS
32   |  S*     | 01000000 |
33   |  SH     | 01000000 |
34   |  F*     | 01000000 |
35   |  TH     | 01000000 |
66   |  P*     | 01001011 |
69   |  T*     | 01001011 |
72   |  K*     | 01001011 |
42   |  CH     | 01001000 |
36   |  /H     | 01000000 |

43   |  **     | 01000000 |
45   |  **     | 01000100 |
46   |  **     | 00000000 |
47   |  **     | 00000000 |


55   |  **     | 01001110 |
56   |  **     | 01001110 |
58   |  **     | 01001110 |
59   |  **     | 01001110 |
61   |  **     | 01001110 |
62   |  **     | 01001110 |
63   |  GX     | 01001110 |
64   |  **     | 01001110 |
65   |  **     | 01001110 |
67   |  **     | 01001011 |
68   |  **     | 01001011 |
70   |  **     | 01001011 |
71   |  **     | 01001011 |
73   |  **     | 01001011 |
74   |  **     | 01001011 |
75   |  KX     | 01001011 |
76   |  **     | 01001011 |
77   |  **     | 01001011 |


SPECIAL
78   |  UL     | 10000000 |
79   |  UM     | 11000001 |
80   |  UN     | 11000001 |
31   |  Q*     | 01001100 |

*/

type PhonemeFlag struct {
	Plosive   bool // 0x0001 'P*', '**', '**', 'T*', '**', '**', 'K*', '**', '**', 'KX', '**', '**', 'UM', 'UN'
	Stopcons  bool // 0x0002 'B*', '**', '**', 'D*', '**', '**', 'G*', '**', '**', 'GX', '**', '**', 'P*', '**', '**', 'T*', '**', '**', 'K*', '**', '**', 'KX', '**', '**'
	Voiced    bool // 0x0004 'IY', 'IH', 'EH', 'AE', 'AA', 'AH', 'AO', 'UH', 'AX', 'IX', 'ER', 'UX', 'OH', 'RX', 'LX', 'WX', 'YX', 'WH', 'R*', 'L*', 'W*', 'Y*', 'M*', 'N*', 'NX', 'Q*', 'Z*', 'ZH', 'V*', 'DH', 'J*', '**', 'EY', 'AY', 'OY', 'AW', 'OW', 'UW', 'B*', '**', '**', 'D*', '**', '**', 'G*', '**', '**', 'GX', '**', '**'
	Unknown1  bool // 0x0008 'M*', 'N*', 'NX', 'DX', 'Q*', 'CH', 'J*', 'B*', '**', '**', 'D*', '**', '**', 'G*', '**', '**', 'GX', '**', '**', 'P*', '**', '**', 'T*', '**', '**', 'K*', '**', '**', 'KX', '**', '**'
	Diphthong bool // 0x0010 'EY', 'AY', 'OY', 'AW', 'OW', 'UW'
	DipYX     bool // 0x0020 'IY', 'IH', 'EH', 'AE', 'AA', 'AH', 'AX', 'IX', 'EY', 'AY', 'OY'
	Consonant bool // 0x0040 'WH', 'R*', 'L*', 'W*', 'Y*', 'M*', 'N*', 'NX', 'DX', 'Q*', 'S*', 'SH', 'F*', 'TH', '/H', '/X', 'Z*', 'ZH', 'V*', 'DH', 'CH', '**', 'J*', '**', 'B*', '**', '**', 'D*', '**', '**', 'G*', '**', '**', 'GX', '**', '**', 'P*', '**', '**', 'T*', '**', '**', 'K*', '**', '**', 'KX', '**', '**', 'UM', 'UN'
	Vowel     bool // 0x0080 'IY', 'IH', 'EH', 'AE', 'AA', 'AH', 'AO', 'UH', 'AX', 'IX', 'ER', 'UX', 'OH', 'RX', 'LX', 'WX', 'YX', 'EY', 'AY', 'OY', 'AW', 'OW', 'UW', 'UL', 'UM', 'UN'
	Punct     bool // 0x0100 '.*', '?*', ',*', '-*'
	Unknown2  bool // 0x0200
	Alveolar  bool // 0x0400 'N*', 'DX', 'S*', 'TH', 'Z*', 'DH', 'D*', '**', '**', 'T*', '**', '**'
	Nasal     bool // 0x0800 'M*', 'N*', 'NX'
	Liquic    bool // 0x1000 'R*', 'L*', 'W*', 'Y*'
	Fricative bool // 0x2000 'S*', 'SH', 'F*', 'TH', 'Z*', 'ZH', 'V*', 'DH', 'CH', '**', '**'
	Unknown3  bool // 0x4000 '.*', '?*', ',*', '-*', 'Q*'
	Unknown4  bool // 0x8000 ' *', '.*', '?*', ',*', '-*'
}

var phonemeFlag = []PhonemeFlag{
	{Unknown4: true}, // ' *' 00
	{Unknown4: true, Unknown3: true, Punct: true},                                // '.*' 01
	{Unknown4: true, Unknown3: true, Punct: true},                                // '?*' 02
	{Unknown4: true, Unknown3: true, Punct: true},                                // '},*' 03
	{Unknown4: true, Unknown3: true, Punct: true},                                // '-*' 04
	{Vowel: true, DipYX: true, Voiced: true},                                     // 'IY' 05
	{Vowel: true, DipYX: true, Voiced: true},                                     // 'IH' 06
	{Vowel: true, DipYX: true, Voiced: true},                                     // 'EH' 07
	{Vowel: true, DipYX: true, Voiced: true},                                     // 'AE' 08
	{Vowel: true, DipYX: true, Voiced: true},                                     // 'AA' 09
	{Vowel: true, DipYX: true, Voiced: true},                                     // 'AH' 10
	{Vowel: true, Voiced: true},                                                  // 'AO' 11
	{Vowel: true, Voiced: true},                                                  // 'UH' 12
	{Vowel: true, DipYX: true, Voiced: true},                                     // 'AX' 13
	{Vowel: true, DipYX: true, Voiced: true},                                     // 'IX' 14
	{Vowel: true, Voiced: true},                                                  // 'ER' 15
	{Vowel: true, Voiced: true},                                                  // 'UX' 16
	{Vowel: true, Voiced: true},                                                  // 'OH' 17
	{Vowel: true, Voiced: true},                                                  // 'RX' 18
	{Vowel: true, Voiced: true},                                                  // 'LX' 19
	{Vowel: true, Voiced: true},                                                  // 'WX' 20
	{Vowel: true, Voiced: true},                                                  // 'YX' 21
	{Consonant: true, Voiced: true},                                              // 'WH' 22
	{Liquic: true, Consonant: true, Voiced: true},                                // 'R*' 23
	{Liquic: true, Consonant: true, Voiced: true},                                // 'L*' 24
	{Liquic: true, Consonant: true, Voiced: true},                                // 'W*' 25
	{Liquic: true, Consonant: true, Voiced: true},                                // 'Y*' 26
	{Nasal: true, Consonant: true, Unknown1: true, Voiced: true},                 // 'M*' 27
	{Nasal: true, Alveolar: true, Consonant: true, Unknown1: true, Voiced: true}, // 'N*' 28
	{Nasal: true, Consonant: true, Unknown1: true, Voiced: true},                 // 'NX' 29
	{Alveolar: true, Consonant: true, Unknown1: true},                            // 'DX' 30
	{Unknown3: true, Consonant: true, Unknown1: true, Voiced: true},              // 'Q*' 31
	{Fricative: true, Alveolar: true, Consonant: true},                           // 'S*' 32
	{Fricative: true, Consonant: true},                                           // 'SH' 33
	{Fricative: true, Consonant: true},                                           // 'F*' 34
	{Fricative: true, Alveolar: true, Consonant: true},                           // 'TH' 35
	{Consonant: true},                                                            // '/H' 36
	{Consonant: true},                                                            // '/X' 37
	{Fricative: true, Alveolar: true, Consonant: true, Voiced: true},             // 'Z*' 38
	{Fricative: true, Consonant: true, Voiced: true},                             // 'ZH' 39
	{Fricative: true, Consonant: true, Voiced: true},                             // 'V*' 40
	{Fricative: true, Alveolar: true, Consonant: true, Voiced: true},             // 'DH' 41
	{Fricative: true, Consonant: true, Unknown1: true},                           // 'CH' 42
	{Fricative: true, Consonant: true},                                           // '**' 43
	{Consonant: true, Unknown1: true, Voiced: true},                              // 'J*' 44
	{Fricative: true, Consonant: true, Voiced: true},                             // '**' 45
	{}, // '**' 46
	{}, // '**' 47
	{Vowel: true, DipYX: true, Diphthong: true, Voiced: true},                        // 'EY' 48
	{Vowel: true, DipYX: true, Diphthong: true, Voiced: true},                        // 'AY' 49
	{Vowel: true, DipYX: true, Diphthong: true, Voiced: true},                        // 'OY' 50
	{Vowel: true, Diphthong: true, Voiced: true},                                     // 'AW' 51
	{Vowel: true, Diphthong: true, Voiced: true},                                     // 'OW' 52
	{Vowel: true, Diphthong: true, Voiced: true},                                     // 'UW' 53
	{Consonant: true, Unknown1: true, Voiced: true, Stopcons: true},                  // 'B*' 54
	{Consonant: true, Unknown1: true, Voiced: true, Stopcons: true},                  // '**' 55
	{Consonant: true, Unknown1: true, Voiced: true, Stopcons: true},                  // '**' 56
	{Alveolar: true, Consonant: true, Unknown1: true, Voiced: true, Stopcons: true},  // 'D*' 57
	{Alveolar: true, Consonant: true, Unknown1: true, Voiced: true, Stopcons: true},  // '**' 58
	{Alveolar: true, Consonant: true, Unknown1: true, Voiced: true, Stopcons: true},  // '**' 59
	{Consonant: true, Unknown1: true, Voiced: true, Stopcons: true},                  // 'G*' 60
	{Consonant: true, Unknown1: true, Voiced: true, Stopcons: true},                  // '**' 61
	{Consonant: true, Unknown1: true, Voiced: true, Stopcons: true},                  // '**' 62
	{Consonant: true, Unknown1: true, Voiced: true, Stopcons: true},                  // 'GX' 63
	{Consonant: true, Unknown1: true, Voiced: true, Stopcons: true},                  // '**' 64
	{Consonant: true, Unknown1: true, Voiced: true, Stopcons: true},                  // '**' 65
	{Consonant: true, Unknown1: true, Stopcons: true, Plosive: true},                 // 'P*' 66
	{Consonant: true, Unknown1: true, Stopcons: true, Plosive: true},                 // '**' 67
	{Consonant: true, Unknown1: true, Stopcons: true, Plosive: true},                 // '**' 68
	{Alveolar: true, Consonant: true, Unknown1: true, Stopcons: true, Plosive: true}, // 'T*' 69
	{Alveolar: true, Consonant: true, Unknown1: true, Stopcons: true, Plosive: true}, // '**' 70
	{Alveolar: true, Consonant: true, Unknown1: true, Stopcons: true, Plosive: true}, // '**' 71
	{Consonant: true, Unknown1: true, Stopcons: true, Plosive: true},                 // 'K*' 72
	{Consonant: true, Unknown1: true, Stopcons: true, Plosive: true},                 // '**' 73
	{Consonant: true, Unknown1: true, Stopcons: true, Plosive: true},                 // '**' 74
	{Consonant: true, Unknown1: true, Stopcons: true, Plosive: true},                 // 'KX' 75
	{Consonant: true, Unknown1: true, Stopcons: true, Plosive: true},                 // '**' 76
	{Consonant: true, Unknown1: true, Stopcons: true, Plosive: true},                 // '**' 77
	{Vowel: true}, // 'UL' 78
	{Vowel: true, Consonant: true, Plosive: true}, // 'UM' 79
	{Vowel: true, Consonant: true, Plosive: true}, // 'UN' 80
}
